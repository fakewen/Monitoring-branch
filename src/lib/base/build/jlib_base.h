#ifndef __base_definitions_h
#define __base_definitions_h

/*
 * This file is machine-generated by the infuser tool.
 * Do not edit.
 */

#include "types.h"

void base_native_handler(dj_global_id id);

// Class definitions
// java.io.IOException
#define BASE_CDEF_java_io_IOException 0
typedef struct _BASE_STRUCT_java_io_IOException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_io_IOException;

// java.io.InputStream
#define BASE_CDEF_java_io_InputStream 1
typedef struct _BASE_STRUCT_java_io_InputStream {
} __attribute__ ((__packed__)) BASE_STRUCT_java_io_InputStream;

// java.io.OutputStream
#define BASE_CDEF_java_io_OutputStream 2
typedef struct _BASE_STRUCT_java_io_OutputStream {
} __attribute__ ((__packed__)) BASE_STRUCT_java_io_OutputStream;

// java.io.PrintStream
#define BASE_CDEF_java_io_PrintStream 3
typedef struct _BASE_STRUCT_java_io_PrintStream {
	ref_t underlying;
} __attribute__ ((__packed__)) BASE_STRUCT_java_io_PrintStream;

// java.lang.ArithmeticException
#define BASE_CDEF_java_lang_ArithmeticException 4
typedef struct _BASE_STRUCT_java_lang_ArithmeticException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_ArithmeticException;

// java.lang.ArrayIndexOutOfBoundsException
#define BASE_CDEF_java_lang_ArrayIndexOutOfBoundsException 5
typedef struct _BASE_STRUCT_java_lang_ArrayIndexOutOfBoundsException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_ArrayIndexOutOfBoundsException;

// java.lang.ArrayStoreException
#define BASE_CDEF_java_lang_ArrayStoreException 6
typedef struct _BASE_STRUCT_java_lang_ArrayStoreException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_ArrayStoreException;

// java.lang.Boolean
#define BASE_CDEF_java_lang_Boolean 7
typedef struct _BASE_STRUCT_java_lang_Boolean {
	int8_t value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Boolean;

// java.lang.Byte
#define BASE_CDEF_java_lang_Byte 8
typedef struct _BASE_STRUCT_java_lang_Byte {
	int8_t value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Byte;

// java.lang.Character
#define BASE_CDEF_java_lang_Character 9
typedef struct _BASE_STRUCT_java_lang_Character {
	char value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Character;

// java.lang.Class
#define BASE_CDEF_java_lang_Class 10
typedef struct _BASE_STRUCT_java_lang_Class {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Class;

// java.lang.ClassCastException
#define BASE_CDEF_java_lang_ClassCastException 11
typedef struct _BASE_STRUCT_java_lang_ClassCastException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_ClassCastException;

// java.lang.Double
#define BASE_CDEF_java_lang_Double 12
typedef struct _BASE_STRUCT_java_lang_Double {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Double;

// java.lang.Error
#define BASE_CDEF_java_lang_Error 13
typedef struct _BASE_STRUCT_java_lang_Error {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Error;

// java.lang.Exception
#define BASE_CDEF_java_lang_Exception 14
typedef struct _BASE_STRUCT_java_lang_Exception {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Exception;

// java.lang.Float
#define BASE_CDEF_java_lang_Float 15
typedef struct _BASE_STRUCT_java_lang_Float {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Float;

// java.lang.IllegalArgumentException
#define BASE_CDEF_java_lang_IllegalArgumentException 16
typedef struct _BASE_STRUCT_java_lang_IllegalArgumentException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_IllegalArgumentException;

// java.lang.IllegalThreadStateException
#define BASE_CDEF_java_lang_IllegalThreadStateException 17
typedef struct _BASE_STRUCT_java_lang_IllegalThreadStateException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_IllegalThreadStateException;

// java.lang.IndexOutOfBoundsException
#define BASE_CDEF_java_lang_IndexOutOfBoundsException 18
typedef struct _BASE_STRUCT_java_lang_IndexOutOfBoundsException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_IndexOutOfBoundsException;

// java.lang.Integer
#define BASE_CDEF_java_lang_Integer 19
typedef struct _BASE_STRUCT_java_lang_Integer {
	int32_t value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Integer;

// java.lang.Iterable
#define BASE_CDEF_java_lang_Iterable 20
typedef struct _BASE_STRUCT_java_lang_Iterable {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Iterable;

// java.lang.Long
#define BASE_CDEF_java_lang_Long 21
typedef struct _BASE_STRUCT_java_lang_Long {
	int64_t value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Long;

// java.lang.Math
#define BASE_CDEF_java_lang_Math 22
typedef struct _BASE_STRUCT_java_lang_Math {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Math;

// java.lang.NullPointerException
#define BASE_CDEF_java_lang_NullPointerException 23
typedef struct _BASE_STRUCT_java_lang_NullPointerException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_NullPointerException;

// java.lang.NumberFormatException
#define BASE_CDEF_java_lang_NumberFormatException 24
typedef struct _BASE_STRUCT_java_lang_NumberFormatException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_NumberFormatException;

// java.lang.Object
#define BASE_CDEF_java_lang_Object 25
typedef struct _BASE_STRUCT_java_lang_Object {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Object;

// java.lang.OutOfMemoryError
#define BASE_CDEF_java_lang_OutOfMemoryError 26
typedef struct _BASE_STRUCT_java_lang_OutOfMemoryError {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_OutOfMemoryError;

// java.lang.Runnable
#define BASE_CDEF_java_lang_Runnable 27
typedef struct _BASE_STRUCT_java_lang_Runnable {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Runnable;

// java.lang.Runtime
#define BASE_CDEF_java_lang_Runtime 28
typedef struct _BASE_STRUCT_java_lang_Runtime {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Runtime;

// java.lang.RuntimeException
#define BASE_CDEF_java_lang_RuntimeException 29
typedef struct _BASE_STRUCT_java_lang_RuntimeException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_RuntimeException;

// java.lang.Short
#define BASE_CDEF_java_lang_Short 30
typedef struct _BASE_STRUCT_java_lang_Short {
	int16_t value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Short;

// java.lang.StackOverflowError
#define BASE_CDEF_java_lang_StackOverflowError 31
typedef struct _BASE_STRUCT_java_lang_StackOverflowError {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_StackOverflowError;

// java.lang.String
#define BASE_CDEF_java_lang_String 32
typedef struct _BASE_STRUCT_java_lang_String {
	int32_t offset;
	int32_t count;
	ref_t value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_String;

// java.lang.StringBuilder
#define BASE_CDEF_java_lang_StringBuilder 33
typedef struct _BASE_STRUCT_java_lang_StringBuilder {
	int32_t count;
	int8_t shared;
	ref_t value;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_StringBuilder;

// java.lang.StringIndexOutOfBoundsException
#define BASE_CDEF_java_lang_StringIndexOutOfBoundsException 34
typedef struct _BASE_STRUCT_java_lang_StringIndexOutOfBoundsException {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_StringIndexOutOfBoundsException;

// java.lang.System
#define BASE_CDEF_java_lang_System 35
typedef struct _BASE_STRUCT_java_lang_System {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_System;

// java.lang.Thread
#define BASE_CDEF_java_lang_Thread 36
typedef struct _BASE_STRUCT_java_lang_Thread {
	int16_t id;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Thread;

// java.lang.Throwable
#define BASE_CDEF_java_lang_Throwable 37
typedef struct _BASE_STRUCT_java_lang_Throwable {
	ref_t message;
	ref_t cause;
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_Throwable;

// java.lang.VirtualMachineError
#define BASE_CDEF_java_lang_VirtualMachineError 38
typedef struct _BASE_STRUCT_java_lang_VirtualMachineError {
} __attribute__ ((__packed__)) BASE_STRUCT_java_lang_VirtualMachineError;

// javax.darjeeling.vm.ClassUnloadedException
#define BASE_CDEF_javax_darjeeling_vm_ClassUnloadedException 39
typedef struct _BASE_STRUCT_javax_darjeeling_vm_ClassUnloadedException {
} __attribute__ ((__packed__)) BASE_STRUCT_javax_darjeeling_vm_ClassUnloadedException;

// javax.darjeeling.vm.Infusion
#define BASE_CDEF_javax_darjeeling_vm_Infusion 40
typedef struct _BASE_STRUCT_javax_darjeeling_vm_Infusion {
	ref_t internalInfusion;
} __attribute__ ((__packed__)) BASE_STRUCT_javax_darjeeling_vm_Infusion;

// javax.darjeeling.vm.InfusionUnloadDependencyException
#define BASE_CDEF_javax_darjeeling_vm_InfusionUnloadDependencyException 41
typedef struct _BASE_STRUCT_javax_darjeeling_vm_InfusionUnloadDependencyException {
} __attribute__ ((__packed__)) BASE_STRUCT_javax_darjeeling_vm_InfusionUnloadDependencyException;

// javax.darjeeling.vm.NativeMethodNotImplementedError
#define BASE_CDEF_javax_darjeeling_vm_NativeMethodNotImplementedError 42
typedef struct _BASE_STRUCT_javax_darjeeling_vm_NativeMethodNotImplementedError {
} __attribute__ ((__packed__)) BASE_STRUCT_javax_darjeeling_vm_NativeMethodNotImplementedError;


// Method definitions
#define BASE_MDEF_void__init_ 0
#define BASE_MDEF_void__init__java_lang_String 1
#define BASE_MDEF_void_close 2
#define BASE_MDEF_int_available 3
#define BASE_MDEF_void_mark_int 4
#define BASE_MDEF_boolean_markSupported 5
#define BASE_MDEF_void_reset 6
#define BASE_MDEF_void_skip_int 7
#define BASE_MDEF_int_read 8
#define BASE_MDEF_int_read_byte__ 9
#define BASE_MDEF_int_read_byte___int_int 10
#define BASE_MDEF_void_write_byte__ 11
#define BASE_MDEF_void_write_byte___int_int 12
#define BASE_MDEF_void_flush 13
#define BASE_MDEF_void_write_int 14
#define BASE_MDEF_void__init__java_io_OutputStream 15
#define BASE_MDEF_void_print_java_lang_String 16
#define BASE_MDEF_void_println_java_lang_String 17
#define BASE_MDEF_void_println 18
#define BASE_MDEF_void__init__int 19
#define BASE_MDEF_void__init__boolean 20
#define BASE_MDEF_boolean_booleanValue 21
#define BASE_MDEF_java_lang_String_toString 22
#define BASE_MDEF_int_hashCode 23
#define BASE_MDEF_boolean_equals_java_lang_Object 24
#define BASE_MDEF_void__clinit_ 25
#define BASE_MDEF_byte_parseByte_java_lang_String 26
#define BASE_MDEF_byte_parseByte_java_lang_String_int 27
#define BASE_MDEF_void__init__byte 28
#define BASE_MDEF_byte_byteValue 29
#define BASE_MDEF_java_lang_Byte_valueOf_byte 30
#define BASE_MDEF_void__init__char 31
#define BASE_MDEF_char_charValue 32
#define BASE_MDEF_boolean_isLowerCase_char 33
#define BASE_MDEF_boolean_isUpperCase_char 34
#define BASE_MDEF_boolean_isDigit_char 35
#define BASE_MDEF_char_toLowerCase_char 36
#define BASE_MDEF_char_toUpperCase_char 37
#define BASE_MDEF_int_digit_char_int 38
#define BASE_MDEF_java_lang_String_toString_int_int 39
#define BASE_MDEF_java_lang_String_toHexString_int 40
#define BASE_MDEF_java_lang_String_toOctalString_int 41
#define BASE_MDEF_java_lang_String_toBinaryString_int 42
#define BASE_MDEF_java_lang_String_toUnsignedString_int_int 43
#define BASE_MDEF_java_lang_String_toString_int 44
#define BASE_MDEF_int_parseInt_java_lang_String_int 45
#define BASE_MDEF_int_parseInt_java_lang_String 46
#define BASE_MDEF_java_lang_Integer_valueOf_java_lang_String_int 47
#define BASE_MDEF_java_lang_Integer_valueOf_java_lang_String 48
#define BASE_MDEF_short_shortValue 49
#define BASE_MDEF_int_intValue 50
#define BASE_MDEF_long_longValue 51
#define BASE_MDEF_java_util_Iterator_iterator 52
#define BASE_MDEF_java_lang_String_toString_long_int 53
#define BASE_MDEF_java_lang_String_toString_long 54
#define BASE_MDEF_long_parseLong_java_lang_String_int 55
#define BASE_MDEF_long_parseLong_java_lang_String 56
#define BASE_MDEF_void__init__long 57
#define BASE_MDEF_int_abs_int 58
#define BASE_MDEF_long_abs_long 59
#define BASE_MDEF_int_max_int_int 60
#define BASE_MDEF_long_max_long_long 61
#define BASE_MDEF_int_min_int_int 62
#define BASE_MDEF_long_min_long_long 63
#define BASE_MDEF_void_run 64
#define BASE_MDEF_java_lang_Runtime_getRuntime 65
#define BASE_MDEF_void_exit_int 66
#define BASE_MDEF_int_freeMemory 67
#define BASE_MDEF_int_totalMemory 68
#define BASE_MDEF_void_gc 69
#define BASE_MDEF_short_parseShort_java_lang_String 70
#define BASE_MDEF_short_parseShort_java_lang_String_int 71
#define BASE_MDEF_void__init__short 72
#define BASE_MDEF_void__init__char__ 73
#define BASE_MDEF_void__init__char___int_int 74
#define BASE_MDEF_void__init__byte___int_int_java_lang_String 75
#define BASE_MDEF_void__init__byte___java_lang_String 76
#define BASE_MDEF_void__init__byte___int_int 77
#define BASE_MDEF_void__init__byte__ 78
#define BASE_MDEF_void__init__java_lang_StringBuilder 79
#define BASE_MDEF_void__init__int_int_char__ 80
#define BASE_MDEF_int_length 81
#define BASE_MDEF_char_charAt_int 82
#define BASE_MDEF_void_getChars_int_int_char___int 83
#define BASE_MDEF_byte___getBytes_java_lang_String 84
#define BASE_MDEF_byte___getBytes 85
#define BASE_MDEF_boolean_equalsIgnoreCase_java_lang_String 86
#define BASE_MDEF_int_compareTo_java_lang_String 87
#define BASE_MDEF_boolean_regionMatches_boolean_int_java_lang_String_int_int 88
#define BASE_MDEF_boolean_startsWith_java_lang_String_int 89
#define BASE_MDEF_boolean_startsWith_java_lang_String 90
#define BASE_MDEF_boolean_endsWith_java_lang_String 91
#define BASE_MDEF_int_indexOf_int 92
#define BASE_MDEF_int_indexOf_int_int 93
#define BASE_MDEF_int_lastIndexOf_int 94
#define BASE_MDEF_int_lastIndexOf_int_int 95
#define BASE_MDEF_int_indexOf_java_lang_String 96
#define BASE_MDEF_int_indexOf_java_lang_String_int 97
#define BASE_MDEF_java_lang_String_substring_int 98
#define BASE_MDEF_java_lang_String_substring_int_int 99
#define BASE_MDEF_java_lang_String_concat_java_lang_String 100
#define BASE_MDEF_java_lang_String_replace_char_char 101
#define BASE_MDEF_java_lang_String_toLowerCase 102
#define BASE_MDEF_java_lang_String_toUpperCase 103
#define BASE_MDEF_java_lang_String_trim 104
#define BASE_MDEF_char___toCharArray 105
#define BASE_MDEF_java_lang_String_valueOf_java_lang_Object 106
#define BASE_MDEF_java_lang_String_valueOf_char__ 107
#define BASE_MDEF_java_lang_String_valueOf_char___int_int 108
#define BASE_MDEF_java_lang_String_valueOf_boolean 109
#define BASE_MDEF_java_lang_String_valueOf_char 110
#define BASE_MDEF_java_lang_String_valueOf_int 111
#define BASE_MDEF_java_lang_String_valueOf_long 112
#define BASE_MDEF_int_capacity 113
#define BASE_MDEF_void_copy 114
#define BASE_MDEF_void_ensureCapacity_int 115
#define BASE_MDEF_void_expandCapacity_int 116
#define BASE_MDEF_void_setLength_int 117
#define BASE_MDEF_void_setCharAt_int_char 118
#define BASE_MDEF_java_lang_StringBuilder_append_java_lang_Object 119
#define BASE_MDEF_java_lang_StringBuilder_append_java_lang_String 120
#define BASE_MDEF_java_lang_StringBuilder_append_char__ 121
#define BASE_MDEF_java_lang_StringBuilder_append_char___int_int 122
#define BASE_MDEF_java_lang_StringBuilder_append_boolean 123
#define BASE_MDEF_java_lang_StringBuilder_append_char 124
#define BASE_MDEF_java_lang_StringBuilder_append_int 125
#define BASE_MDEF_java_lang_StringBuilder_append_long 126
#define BASE_MDEF_java_lang_StringBuilder_delete_int_int 127
#define BASE_MDEF_java_lang_StringBuilder_deleteCharAt_int 128
#define BASE_MDEF_java_lang_StringBuilder_insert_int_java_lang_Object 129
#define BASE_MDEF_java_lang_StringBuilder_insert_int_java_lang_String 130
#define BASE_MDEF_java_lang_StringBuilder_insert_int_char__ 131
#define BASE_MDEF_java_lang_StringBuilder_insert_int_boolean 132
#define BASE_MDEF_java_lang_StringBuilder_insert_int_char 133
#define BASE_MDEF_java_lang_StringBuilder_insert_int_int 134
#define BASE_MDEF_java_lang_StringBuilder_insert_int_long 135
#define BASE_MDEF_java_lang_StringBuilder_reverse 136
#define BASE_MDEF_void_setShared 137
#define BASE_MDEF_char___getValue 138
#define BASE_MDEF_long_currentTimeMillis 139
#define BASE_MDEF_void_arraycopy_java_lang_Object_int_java_lang_Object_int_int 140
#define BASE_MDEF_short__create 141
#define BASE_MDEF_void__start_short 142
#define BASE_MDEF_short__getStatus_short 143
#define BASE_MDEF_void__setRunnable_short_java_lang_Runnable 144
#define BASE_MDEF_short__getCurrentThreadId 145
#define BASE_MDEF_void__init__java_lang_Runnable 146
#define BASE_MDEF_void_start 147
#define BASE_MDEF_void_sleep_long 148
#define BASE_MDEF_int_activeCount 149
#define BASE_MDEF_java_lang_Thread_currentThread 150
#define BASE_MDEF_int_getCurrentThreadId 151
#define BASE_MDEF_boolean_isAlive 152
#define BASE_MDEF_void_yield 153
#define BASE_MDEF_void__init__java_lang_Throwable 154
#define BASE_MDEF_void__init__java_lang_String_java_lang_Throwable 155
#define BASE_MDEF_java_lang_String_getMessage 156
#define BASE_MDEF_void__init__java_lang_Object 157
#define BASE_MDEF_short_getInfusionCount 158
#define BASE_MDEF_java_lang_Object__getInfusion_short 159
#define BASE_MDEF_javax_darjeeling_vm_Infusion_getInfusion_short 160
#define BASE_MDEF_char____getName_java_lang_Object 161
#define BASE_MDEF_java_lang_String_getName 162
#define BASE_MDEF_short__getImportedInfusionCount_java_lang_Object 163
#define BASE_MDEF_short_getImportedInfusionCount 164
#define BASE_MDEF_java_lang_Object__getImportedInfusion_java_lang_Object_short 165
#define BASE_MDEF_javax_darjeeling_vm_Infusion_getImportedInfusion_short 166
#define BASE_MDEF_javax_darjeeling_vm_Infusion_getInfusionByName_java_lang_String 167
#define BASE_MDEF_void__unload_java_lang_Object 168
#define BASE_MDEF_void_unload 169


#endif

